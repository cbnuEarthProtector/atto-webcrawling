# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches:
      - deploy
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nanasess/setup-chromedriver@v1
        with:
          # Optional: do not specify to match Chrome's version
          chromedriver-version: '88.0.4324.96'
      - run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional

      - run: |
          VERSION_STRING="88.0.4324.96-1"
          wget "https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${VERSION_STRING}_amd64.deb"
          sudo dpkg -i "google-chrome-stable_${VERSION_STRING}_amd64.deb"
          chrome --version

      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: microsoft
          java-version: 16

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: mv chromedriver
        run: sudo mv /usr/local/bin/chromedriver ./chromedriver.exe

      - name: Execute Gradle run
        run: ./gradlew run

  push:
    needs: build
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Push directory to another repository
        uses: cpina/github-action-push-to-another-repository@ssh-deploy-key
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        with:
          source-directory: 'database'
          destination-github-username: 'chisan01'
          destination-repository-name: 'atto'
          user-email: chisan2001@naver.com
          target-branch: db-update
          target-directory: 'app/src/main/assets/database'
